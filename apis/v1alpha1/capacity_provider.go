// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// CapacityProviderSpec defines the desired state of CapacityProvider.
//
// The details for a capacity provider.
type CapacityProviderSpec struct {

	// The details of the Auto Scaling group for the capacity provider.
	// +kubebuilder:validation:Required
	AutoScalingGroupProvider *AutoScalingGroupProvider `json:"autoScalingGroupProvider"`
	// The name of the capacity provider. Up to 255 characters are allowed. They
	// include letters (both upper and lowercase letters), numbers, underscores
	// (_), and hyphens (-). The name can't be prefixed with "aws", "ecs", or "fargate".
	Name *string `json:"name,omitempty"`
	// The metadata that you apply to the capacity provider to categorize and organize
	// them more conveniently. Each tag consists of a key and an optional value.
	// You define both of them.
	//
	// The following basic restrictions apply to tags:
	//
	//   - Maximum number of tags per resource - 50
	//
	//   - For each resource, each tag key must be unique, and each tag key can
	//     have only one value.
	//
	//   - Maximum key length - 128 Unicode characters in UTF-8
	//
	//   - Maximum value length - 256 Unicode characters in UTF-8
	//
	//   - If your tagging schema is used across multiple services and resources,
	//     remember that other services may have restrictions on allowed characters.
	//     Generally allowed characters are: letters, numbers, and spaces representable
	//     in UTF-8, and the following characters: + - = . _ : / @.
	//
	//   - Tag keys and values are case-sensitive.
	//
	//   - Do not use aws:, AWS:, or any upper or lowercase combination of such
	//     as a prefix for either keys or values as it is reserved for Amazon Web
	//     Services use. You cannot edit or delete tag keys or values with this prefix.
	//     Tags with this prefix do not count against your tags per resource limit.
	Tags []*Tag `json:"tags,omitempty"`
}

// CapacityProviderStatus defines the observed state of CapacityProvider
type CapacityProviderStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRs managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// The current status of the capacity provider. Only capacity providers in an
	// ACTIVE state can be used in a cluster. When a capacity provider is successfully
	// deleted, it has an INACTIVE status.
	// +kubebuilder:validation:Optional
	Status *string `json:"status,omitempty"`
	// The update status of the capacity provider. The following are the possible
	// states that is returned.
	//
	// DELETE_IN_PROGRESS
	//
	// The capacity provider is in the process of being deleted.
	//
	// DELETE_COMPLETE
	//
	// The capacity provider was successfully deleted and has an INACTIVE status.
	//
	// DELETE_FAILED
	//
	// The capacity provider can't be deleted. The update status reason provides
	// further details about why the delete failed.
	// +kubebuilder:validation:Optional
	UpdateStatus *string `json:"updateStatus,omitempty"`
	// The update status reason. This provides further details about the update
	// status for the capacity provider.
	// +kubebuilder:validation:Optional
	UpdateStatusReason *string `json:"updateStatusReason,omitempty"`
}

// CapacityProvider is the Schema for the CapacityProviders API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:printcolumn:name="CAPACITYPROVIDER",type=string,priority=0,JSONPath=`.spec.name`
// +kubebuilder:printcolumn:name="STATUS",type=string,priority=0,JSONPath=`.status.status`
// +kubebuilder:printcolumn:name="UPDATESTATUS",type=string,priority=0,JSONPath=`.status.updateStatus`
type CapacityProvider struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              CapacityProviderSpec   `json:"spec,omitempty"`
	Status            CapacityProviderStatus `json:"status,omitempty"`
}

// CapacityProviderList contains a list of CapacityProvider
// +kubebuilder:object:root=true
type CapacityProviderList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []CapacityProvider `json:"items"`
}

func init() {
	SchemeBuilder.Register(&CapacityProvider{}, &CapacityProviderList{})
}
